# &#35; basic stack buffer overflow

#### &#42; setting aslr off & core dump
```bash

$ cat /etc/sysctl.conf
kernel.randomize_va_space=0
kernel.core_pattern = core.%e


$ sudo sysctl -p
kernel.randomize_va_space = 0
kernel.core_pattern = core.%e

```

#### &#42; vulnerable source code
#### strcpy() in vuln_func() : can overwrite rsp & rip ...
```bash

$ cat vulnerable.c
#include <stdio.h>

void vuln_func(char *input) {
	char buffer[256];
	strcpy(buffer, input);
	printf("%s\n", buffer);
}

int main(int argc, char *argv[]) {
	if(argc>1)
		vuln_func(argv[1]);
	else
		printf("Usage : %s %s\n", argv[0], "input string");
}

```
